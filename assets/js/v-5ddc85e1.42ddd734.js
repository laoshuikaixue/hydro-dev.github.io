"use strict";(self.webpackChunkhydro_dev_github_io=self.webpackChunkhydro_dev_github_io||[]).push([[4377],{5958:(s,n,a)=>{a.r(n),a.d(n,{data:()=>l});const l=JSON.parse('{"key":"v-5ddc85e1","path":"/dev/typescript.html","title":"使用 TypeScript 编写插件","lang":"en-US","frontmatter":{"description":"前置条件：NodeJS>=18 此教程将以编写剪贴板插件为例进行说明。 Step1 初始化项目 使用 hydrooj addon create 快速在 /root/addon 下初始化一个插件或是在一个空文件夹中运行 yarn init 并按照提示填写相关信息。 可选：在本机环境编写插件 有时我们希望使用本机的 IDE 编写插件上传到服务器（我们也推荐...","head":[["meta",{"property":"og:url","content":"https://hydro.js.org/dev/typescript.html"}],["meta",{"property":"og:site_name","content":"Hydro"}],["meta",{"property":"og:title","content":"使用 TypeScript 编写插件"}],["meta",{"property":"og:description","content":"前置条件：NodeJS>=18 此教程将以编写剪贴板插件为例进行说明。 Step1 初始化项目 使用 hydrooj addon create 快速在 /root/addon 下初始化一个插件或是在一个空文件夹中运行 yarn init 并按照提示填写相关信息。 可选：在本机环境编写插件 有时我们希望使用本机的 IDE 编写插件上传到服务器（我们也推荐..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-03-02T07:55:17.000Z"}],["meta",{"property":"article:modified_time","content":"2024-03-02T07:55:17.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"使用 TypeScript 编写插件\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-03-02T07:55:17.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Step1 初始化项目","slug":"step1-初始化项目","link":"#step1-初始化项目","children":[]},{"level":2,"title":"可选：在本机环境编写插件","slug":"可选-在本机环境编写插件","link":"#可选-在本机环境编写插件","children":[]},{"level":2,"title":"Step2 准备编写组件","slug":"step2-准备编写组件","link":"#step2-准备编写组件","children":[]},{"level":2,"title":"Step4 template","slug":"step4-template","link":"#step4-template","children":[]},{"level":2,"title":"Step5 locale","slug":"step5-locale","link":"#step5-locale","children":[]}],"git":{"createdTime":1612251809000,"updatedTime":1709366117000,"contributors":[{"name":"undefined","email":"i@undefined.moe","commits":5},{"name":"panda","email":"panda_dtdyy@outlook.com","commits":2},{"name":"Macesuted Kysic","email":"macesuted@foxmail.com","commits":1},{"name":"无限UCW","email":"45730483+wuxianucw@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":4.04,"words":1213},"filePathRelative":"dev/typescript.md","localizedDate":"February 2, 2021","autoDesc":true,"excerpt":""}')},5067:(s,n,a)=>{a.r(n),a.d(n,{default:()=>e});var l=a(6252);const p=[(0,l.uE)('<h1 id="使用-typescript-编写插件" tabindex="-1"><a class="header-anchor" href="#使用-typescript-编写插件"><span>使用 TypeScript 编写插件</span></a></h1><p>前置条件：NodeJS&gt;=18<br> 此教程将以编写剪贴板插件为例进行说明。</p><h2 id="step1-初始化项目" tabindex="-1"><a class="header-anchor" href="#step1-初始化项目"><span>Step1 初始化项目</span></a></h2><p>使用 <code>hydrooj addon create</code> 快速在 <code>/root/addon</code> 下初始化一个插件或是在一个空文件夹中运行 <code>yarn init</code> 并按照提示填写相关信息。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki nord" style="background-color:#2e3440ff;" tabindex="0"><code><span class="line"><span style="color:#616E88;"># 使用 yarn init 的样例</span></span>\n<span class="line"><span style="color:#88C0D0;">/workspace/hydro-plugin</span><span style="color:#D8DEE9FF;"> $ </span><span style="color:#A3BE8C;">yarn</span><span style="color:#D8DEE9FF;"> </span><span style="color:#A3BE8C;">init</span></span>\n<span class="line"><span style="color:#88C0D0;">yarn</span><span style="color:#D8DEE9FF;"> </span><span style="color:#A3BE8C;">init</span><span style="color:#D8DEE9FF;"> </span><span style="color:#A3BE8C;">v1.22.4</span></span>\n<span class="line"><span style="color:#88C0D0;">question</span><span style="color:#D8DEE9FF;"> </span><span style="color:#A3BE8C;">name</span><span style="color:#D8DEE9FF;"> (hydro-plugin): @hydrooj/pastebin</span></span>\n<span class="line"><span style="color:#88C0D0;">question</span><span style="color:#D8DEE9FF;"> </span><span style="color:#A3BE8C;">version</span><span style="color:#D8DEE9FF;"> (1.0.0): 0.0.1</span></span>\n<span class="line"><span style="color:#88C0D0;">question</span><span style="color:#D8DEE9FF;"> </span><span style="color:#A3BE8C;">description:</span><span style="color:#D8DEE9FF;"> </span><span style="color:#A3BE8C;">HydroOJ的剪贴板组件</span></span>\n<span class="line"><span style="color:#88C0D0;">question</span><span style="color:#D8DEE9FF;"> </span><span style="color:#A3BE8C;">entry</span><span style="color:#D8DEE9FF;"> </span><span style="color:#A3BE8C;">point</span><span style="color:#D8DEE9FF;"> (index.js): index.ts</span></span>\n<span class="line"><span style="color:#88C0D0;">question</span><span style="color:#D8DEE9FF;"> </span><span style="color:#A3BE8C;">repository</span><span style="color:#D8DEE9FF;"> </span><span style="color:#A3BE8C;">url:</span><span style="color:#D8DEE9FF;"> </span><span style="color:#A3BE8C;">https://github.com/hydro-dev/pastebin.git</span></span>\n<span class="line"><span style="color:#88C0D0;">question</span><span style="color:#D8DEE9FF;"> </span><span style="color:#A3BE8C;">author:</span><span style="color:#D8DEE9FF;"> </span><span style="color:#A3BE8C;">undefined</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">&lt;</span><span style="color:#A3BE8C;">i@undefined.mo</span><span style="color:#D8DEE9FF;">e</span><span style="color:#81A1C1;">&gt;</span></span>\n<span class="line"><span style="color:#88C0D0;">question</span><span style="color:#D8DEE9FF;"> </span><span style="color:#A3BE8C;">license</span><span style="color:#D8DEE9FF;"> (MIT): MIT</span></span>\n<span class="line"><span style="color:#88C0D0;">question</span><span style="color:#D8DEE9FF;"> </span><span style="color:#A3BE8C;">private:</span></span>\n<span class="line"><span style="color:#88C0D0;">success</span><span style="color:#D8DEE9FF;"> </span><span style="color:#A3BE8C;">Saved</span><span style="color:#D8DEE9FF;"> </span><span style="color:#A3BE8C;">package.json</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="可选-在本机环境编写插件" tabindex="-1"><a class="header-anchor" href="#可选-在本机环境编写插件"><span>可选：在本机环境编写插件</span></a></h2><p>有时我们希望使用本机的 IDE 编写插件上传到服务器（我们也推荐这么做，编辑器提供的代码补全可以很大程度简化开发流程），可以进行如下操作：</p><ol><li>在本机安装 NodeJS 和 yarn 。</li><li>参照步骤 1 使用 <code>yarn init</code> 创建一个项目。</li><li>使用 VSCode 打开插件文件夹。</li><li>使用 <code>yarn add hydrooj -D</code> 安装相关开发组件。</li><li>参照下文进行插件开发工作</li><li>将本地的文件夹上传至服务器，并使用 <code>hydrooj addon add 插件绝对路径</code> 启用上传的插件。</li></ol><h2 id="step2-准备编写组件" tabindex="-1"><a class="header-anchor" href="#step2-准备编写组件"><span>Step2 准备编写组件</span></a></h2><p>分析：剪贴板组件需要以下功能：</p><ul><li>与数据库交互来存储/检索相应文档。</li><li>提供 /paste/create 路由以创建新文档。</li><li>提供 /paste/show/:ID 来查看已创建的文档。</li><li>根据用户ID进行鉴权，允许将文档设置为私密以防止他人查看。</li></ul><p>在路由中定义所有的函数应均为异步函数，支持的函数有：prepare, get, post, post[Operation], cleanup<br> 具体流程如下：</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="shiki nord" style="background-color:#2e3440ff;" tabindex="0"><code><span class="line"><span style="color:#d8dee9ff;">先执行 prepare(args) （如果存在）</span></span>\n<span class="line"><span style="color:#d8dee9ff;">args 为传入的参数集合（包括 QueryString, Body, Path）中的全部参数，</span></span>\n<span class="line"><span style="color:#d8dee9ff;">再执行 prepare(args) （如果存在）</span></span>\n<span class="line"><span style="color:#d8dee9ff;">检查请求类型：</span></span>\n<span class="line"><span style="color:#d8dee9ff;"></span></span>\n<span class="line"><span style="color:#d8dee9ff;">为 GET ？</span></span>\n<span class="line"><span style="color:#d8dee9ff;">  -&gt; 执行 get(args)</span></span>\n<span class="line"><span style="color:#d8dee9ff;">为 POST ?</span></span>\n<span class="line"><span style="color:#d8dee9ff;">  -&gt; 执行 post(args)</span></span>\n<span class="line"><span style="color:#d8dee9ff;">  -&gt; 含有 operation 字段？</span></span>\n<span class="line"><span style="color:#d8dee9ff;">       -&gt; 执行 post[Operation]</span></span>\n<span class="line"><span style="color:#d8dee9ff;"></span></span>\n<span class="line"><span style="color:#d8dee9ff;">执行 cleanup()</span></span>\n<span class="line"><span style="color:#d8dee9ff;"></span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果在 this.response.template 指定模板则渲染，否则直接返回 this.response.body 中的内容。</p><ul><li>在表单提交时的 operation 字段使用下划线，函数名使用驼峰命名。</li></ul><p>如 <code>&lt;input type=&quot;hidden&quot; name=&quot;operation&quot; value=&quot;confirm_delete&quot;&gt;</code> 对应 <code>postConfirmDelete</code> 函数。</p><p>应当提供 <code>apply</code> 函数，并与定义的 Handler 一同挂载到 <code>global.Hydro.handler[模块名]</code> 位置。 <code>apply</code> 函数将在初始化阶段被调用。</p><h1 id="step3-index-ts" tabindex="-1"><a class="header-anchor" href="#step3-index-ts"><span>Step3 index.ts</span></a></h1><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="shiki nord" style="background-color:#2e3440ff;" tabindex="0"><code><span class="line"><span style="color:#616E88;">// @noErrors</span></span>\n<span class="line"><span style="color:#616E88;">// @module: esnext</span></span>\n<span class="line"><span style="color:#616E88;">// @filename: index.ts</span></span>\n<span class="line"><span style="color:#81A1C1;">import</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">{</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#D8DEE9;">db</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">definePlugin</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">Handler</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">NotFoundError</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">param</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">PermissionError</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">PRIV</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">Types</span><span style="color:#ECEFF4;">,</span></span>\n<span class="line"><span style="color:#ECEFF4;">}</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">from</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;">hydrooj</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#81A1C1;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#81A1C1;">const</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">coll</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">db</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">collection</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;">paste</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#81A1C1;">interface</span><span style="color:#D8DEE9FF;"> </span><span style="color:#8FBCBB;">Paste</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">{</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">    _id</span><span style="color:#81A1C1;">:</span><span style="color:#D8DEE9FF;"> </span><span style="color:#8FBCBB;">string</span><span style="color:#81A1C1;">;</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">    owner</span><span style="color:#81A1C1;">:</span><span style="color:#D8DEE9FF;"> </span><span style="color:#8FBCBB;">number</span><span style="color:#81A1C1;">;</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">    content</span><span style="color:#81A1C1;">:</span><span style="color:#D8DEE9FF;"> </span><span style="color:#8FBCBB;">string</span><span style="color:#81A1C1;">;</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">    isPrivate</span><span style="color:#81A1C1;">:</span><span style="color:#D8DEE9FF;"> </span><span style="color:#8FBCBB;">boolean</span><span style="color:#81A1C1;">;</span></span>\n<span class="line"><span style="color:#ECEFF4;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#81A1C1;">declare</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">module</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;">hydrooj</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">{</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#81A1C1;">interface</span><span style="color:#D8DEE9FF;"> </span><span style="color:#8FBCBB;">Model</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">{</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">        pastebin</span><span style="color:#81A1C1;">:</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">typeof</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">pastebinModel</span><span style="color:#81A1C1;">;</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#ECEFF4;">}</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#81A1C1;">interface</span><span style="color:#D8DEE9FF;"> </span><span style="color:#8FBCBB;">Collections</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">{</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">        paste</span><span style="color:#81A1C1;">:</span><span style="color:#D8DEE9FF;"> </span><span style="color:#8FBCBB;">Paste</span><span style="color:#81A1C1;">;</span><span style="color:#D8DEE9FF;"> </span><span style="color:#616E88;">// 声明数据表类型</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#ECEFF4;">}</span></span>\n<span class="line"><span style="color:#ECEFF4;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#81A1C1;">async</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">function</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">add</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">userId</span><span style="color:#81A1C1;">:</span><span style="color:#D8DEE9FF;"> </span><span style="color:#8FBCBB;">number</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">content</span><span style="color:#81A1C1;">:</span><span style="color:#D8DEE9FF;"> </span><span style="color:#8FBCBB;">string</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">isPrivate</span><span style="color:#81A1C1;">:</span><span style="color:#D8DEE9FF;"> </span><span style="color:#8FBCBB;">boolean</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">:</span><span style="color:#D8DEE9FF;"> </span><span style="color:#8FBCBB;">Promise</span><span style="color:#ECEFF4;">&lt;</span><span style="color:#8FBCBB;">string</span><span style="color:#ECEFF4;">&gt;</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">{</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#81A1C1;">const</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">pasteId</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">String</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">random</span><span style="color:#D8DEE9FF;">(</span><span style="color:#B48EAD;">16</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span><span style="color:#D8DEE9FF;"> </span><span style="color:#616E88;">// Hydro 提供了此方法，创建一个长度为16的随机字符串</span></span>\n<span class="line"><span style="color:#ECEFF4;">    </span><span style="color:#616E88;">// 使用 mongodb 为数据库驱动，相关操作参照其文档</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#81A1C1;">const</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">result</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">await</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">coll</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">insertOne</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">{</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">        </span><span style="color:#D8DEE9;">_id</span><span style="color:#ECEFF4;">:</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">pasteId</span><span style="color:#ECEFF4;">,</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">        </span><span style="color:#D8DEE9;">owner</span><span style="color:#ECEFF4;">:</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">userId</span><span style="color:#ECEFF4;">,</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">        </span><span style="color:#D8DEE9;">content</span><span style="color:#ECEFF4;">,</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">        </span><span style="color:#D8DEE9;">isPrivate</span><span style="color:#ECEFF4;">,</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#ECEFF4;">}</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#81A1C1;">return</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">result</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">insertedId</span><span style="color:#81A1C1;">;</span><span style="color:#D8DEE9FF;"> </span><span style="color:#616E88;">// 返回插入的文档ID</span></span>\n<span class="line"><span style="color:#ECEFF4;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#81A1C1;">async</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">function</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">get</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">pasteId</span><span style="color:#81A1C1;">:</span><span style="color:#D8DEE9FF;"> </span><span style="color:#8FBCBB;">string</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">:</span><span style="color:#D8DEE9FF;"> </span><span style="color:#8FBCBB;">Promise</span><span style="color:#ECEFF4;">&lt;</span><span style="color:#8FBCBB;">Paste</span><span style="color:#ECEFF4;">&gt;</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">{</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#81A1C1;">return</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">await</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">coll</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">findOne</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">{</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">_id</span><span style="color:#ECEFF4;">:</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">pasteId</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">}</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span>\n<span class="line"><span style="color:#ECEFF4;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#616E88;">// 暴露这些接口，使得 cli 也能够正常调用这些函数；</span></span>\n<span class="line"><span style="color:#81A1C1;">const</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">pastebinModel</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">{</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">add</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">get</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">}</span><span style="color:#81A1C1;">;</span></span>\n<span class="line"><span style="color:#D8DEE9;">global</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">Hydro</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">model</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">pastebin</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">pastebinModel</span><span style="color:#81A1C1;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#616E88;">// 创建新路由</span></span>\n<span class="line"><span style="color:#81A1C1;">class</span><span style="color:#D8DEE9FF;"> </span><span style="color:#8FBCBB;">PasteCreateHandler</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">extends</span><span style="color:#D8DEE9FF;"> </span><span style="color:#8FBCBB;font-weight:bold;">Handler</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">{</span></span>\n<span class="line"><span style="color:#ECEFF4;">    </span><span style="color:#616E88;">// Get请求时触发该函数</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#81A1C1;">async</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">get</span><span style="color:#ECEFF4;">()</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">{</span></span>\n<span class="line"><span style="color:#ECEFF4;">        </span><span style="color:#616E88;">// 检查用户是否登录，此处为多余（因为底部注册路由时已声明所需权限）</span></span>\n<span class="line"><span style="color:#ECEFF4;">        </span><span style="color:#616E88;">// 此方法适用于权限的动态检查</span></span>\n<span class="line"><span style="color:#ECEFF4;">        </span><span style="color:#616E88;">// this.checkPriv(PRIV.PRIV_USER_PROFILE);</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">        </span><span style="color:#81A1C1;">this</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">response</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">template</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;">paste_create.html</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#81A1C1;">;</span><span style="color:#D8DEE9FF;"> </span><span style="color:#616E88;">// 返回此页面</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#ECEFF4;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#ECEFF4;">    </span><span style="color:#616E88;">// 使用 Types.Content 检查输入</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#D08770;">@param</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;">content</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">Types</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">Content</span><span style="color:#D8DEE9FF;">)</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#D08770;">@param</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;">private</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">Types</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">Boolean</span><span style="color:#D8DEE9FF;">)</span></span>\n<span class="line"><span style="color:#ECEFF4;">    </span><span style="color:#616E88;">// 从用户提交的表单中取出content和private字段</span></span>\n<span class="line"><span style="color:#ECEFF4;">    </span><span style="color:#616E88;">// domainId 为固定传入参数</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#81A1C1;">async</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">post</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">domainId</span><span style="color:#81A1C1;">:</span><span style="color:#D8DEE9FF;"> </span><span style="color:#8FBCBB;">string</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">content</span><span style="color:#81A1C1;">:</span><span style="color:#D8DEE9FF;"> </span><span style="color:#8FBCBB;">string</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">isPrivate</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">false</span><span style="color:#ECEFF4;">)</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">{</span></span>\n<span class="line"><span style="color:#ECEFF4;">        </span><span style="color:#616E88;">// 在HTML表单提交的多选框中，选中值为 &#39;on&#39;，未选中则为空，需要进行转换</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">        </span><span style="color:#81A1C1;">const</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">pasteid</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">await</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">pastebinModel</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">add</span><span style="color:#D8DEE9FF;">(</span><span style="color:#81A1C1;">this</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">user</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">_id</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">content</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">!!</span><span style="color:#D8DEE9;">isPrivate</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span>\n<span class="line"><span style="color:#ECEFF4;">        </span><span style="color:#616E88;">// 将用户重定向到创建完成的url</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">        </span><span style="color:#81A1C1;">this</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">response</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">redirect</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">this</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">url</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;">paste_show</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">{</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">id</span><span style="color:#ECEFF4;">:</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">pasteid</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">}</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span>\n<span class="line"><span style="color:#ECEFF4;">        </span><span style="color:#616E88;">// 相应的，提供了 this.back() 方法用于将用户重定向至前一个地址（通常用于 Ajax 或是部分更新操作）</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#ECEFF4;">}</span></span>\n<span class="line"><span style="color:#ECEFF4;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#81A1C1;">class</span><span style="color:#D8DEE9FF;"> </span><span style="color:#8FBCBB;">PasteShowHandler</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">extends</span><span style="color:#D8DEE9FF;"> </span><span style="color:#8FBCBB;font-weight:bold;">Handler</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">{</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#D08770;">@param</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;">id</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">Types</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">String</span><span style="color:#D8DEE9FF;">)</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#81A1C1;">async</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">get</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">domainId</span><span style="color:#81A1C1;">:</span><span style="color:#D8DEE9FF;"> </span><span style="color:#8FBCBB;">string</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">id</span><span style="color:#81A1C1;">:</span><span style="color:#D8DEE9FF;"> </span><span style="color:#8FBCBB;">string</span><span style="color:#ECEFF4;">)</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">{</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">        </span><span style="color:#81A1C1;">const</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">doc</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">await</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">pastebin</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">get</span><span style="color:#D8DEE9FF;">(</span><span style="color:#D8DEE9;">id</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">        </span><span style="color:#81A1C1;">if</span><span style="color:#D8DEE9FF;"> (</span><span style="color:#81A1C1;">!</span><span style="color:#D8DEE9;">doc</span><span style="color:#D8DEE9FF;">) </span><span style="color:#81A1C1;">throw</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">new</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">NotFoundError</span><span style="color:#D8DEE9FF;">(</span><span style="color:#D8DEE9;">id</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">        </span><span style="color:#81A1C1;">if</span><span style="color:#D8DEE9FF;"> (</span><span style="color:#D8DEE9;">doc</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">isPrivate</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">&amp;&amp;</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">this</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">user</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">_id</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">!==</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">doc</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">owner</span><span style="color:#D8DEE9FF;">) </span><span style="color:#ECEFF4;">{</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">            </span><span style="color:#81A1C1;">throw</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">new</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">PermissionError</span><span style="color:#D8DEE9FF;">()</span><span style="color:#81A1C1;">;</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">        </span><span style="color:#ECEFF4;">}</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">        </span><span style="color:#81A1C1;">this</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">response</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">body</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">{</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">doc</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">}</span><span style="color:#81A1C1;">;</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">        </span><span style="color:#81A1C1;">this</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">response</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">template</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">=</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;">paste_show.html</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#81A1C1;">;</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#ECEFF4;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#D08770;">@param</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;">id</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">Types</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">String</span><span style="color:#D8DEE9FF;">)</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#81A1C1;">async</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">postDelete</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">domainId</span><span style="color:#81A1C1;">:</span><span style="color:#D8DEE9FF;"> </span><span style="color:#8FBCBB;">string</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">id</span><span style="color:#81A1C1;">:</span><span style="color:#D8DEE9FF;"> </span><span style="color:#8FBCBB;">string</span><span style="color:#ECEFF4;">)</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">{</span></span>\n<span class="line"><span style="color:#ECEFF4;">        </span><span style="color:#616E88;">// 当提交表单并存在 operation 值为 delete 时执行。</span></span>\n<span class="line"><span style="color:#ECEFF4;">        </span><span style="color:#616E88;">// 本例中未实现删除功能，仅作为说明。</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#ECEFF4;">}</span></span>\n<span class="line"><span style="color:#ECEFF4;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#616E88;">// Hydro会在服务初始化完成后调用该函数。</span></span>\n<span class="line"><span style="color:#81A1C1;">export</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">async</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">function</span><span style="color:#D8DEE9FF;"> </span><span style="color:#88C0D0;">apply</span><span style="color:#ECEFF4;">()</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">{</span></span>\n<span class="line"><span style="color:#ECEFF4;">    </span><span style="color:#616E88;">// 注册一个名为 paste_create 的路由，匹配 &#39;/paste/create&#39;，</span></span>\n<span class="line"><span style="color:#ECEFF4;">    </span><span style="color:#616E88;">// 使用PasteCreateHandler处理，访问改路由需要PRIV.PRIV_USER_PROFILE权限</span></span>\n<span class="line"><span style="color:#ECEFF4;">    </span><span style="color:#616E88;">// 提示：路由匹配基于 path-to-regexp</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#D8DEE9;">ctx</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">Route</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;">paste_create</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;">/paste/create</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">PasteCreateHandler</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">PRIV</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">PRIV_USER_PROFILE</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span>\n<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#D8DEE9;">ctx</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">Route</span><span style="color:#D8DEE9FF;">(</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;">paste_show</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#ECEFF4;">&#39;</span><span style="color:#A3BE8C;">/paste/show/:id</span><span style="color:#ECEFF4;">&#39;</span><span style="color:#ECEFF4;">,</span><span style="color:#D8DEE9FF;"> </span><span style="color:#D8DEE9;">PasteShowHandler</span><span style="color:#D8DEE9FF;">)</span><span style="color:#81A1C1;">;</span></span>\n<span class="line"><span style="color:#ECEFF4;">}</span></span>\n<span class="line"></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="step4-template" tabindex="-1"><a class="header-anchor" href="#step4-template"><span>Step4 template</span></a></h2><p>模板采用 nunjucks 语法。放置于 <code>templates/</code> 文件夹下。<br> 会在请求结束时根据 <code>response.template</code> 的值选择模板，并使用 <code>response.body</code> 的值进行渲染，存入 <code>response.body</code> 中。<br> 若 <code>response.template</code> 为空或 <code>request.headers[&#39;accept&#39;] == &#39;application/json&#39;</code>，则跳过渲染步骤。</p><h2 id="step5-locale" tabindex="-1"><a class="header-anchor" href="#step5-locale"><span>Step5 locale</span></a></h2><p>用于提供多国翻译。格式与 Hydro 的 locale 文件夹格式相同。</p>',23)],o={},e=(0,a(3744).Z)(o,[["render",function(s,n){return(0,l.wg)(),(0,l.iD)("div",null,p)}]])},3744:(s,n)=>{n.Z=(s,n)=>{const a=s.__vccOpts||s;for(const[s,l]of n)a[s]=l;return a}}}]);