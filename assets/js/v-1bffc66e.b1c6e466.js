"use strict";(self.webpackChunkhydro_dev_github_io=self.webpackChunkhydro_dev_github_io||[]).push([[4718],{6344:(s,a,n)=>{n.r(a),n.d(a,{data:()=>e});const e=JSON.parse('{"key":"v-1bffc66e","path":"/docs/system/maintain.html","title":"维护","lang":"en-US","frontmatter":{"description":"PM2 使用一键安装脚本安装的 Hydro 使用 PM2 对进程进行管理。 进程名称 可以通过下面的指令查看当前 PM2 正在管理的所有进程。 一键安装脚本默认会创建下面几个进程： hydrooj： Hydro 主进程; hydro-sandbox： Hydro 评测沙箱; mongodb： MongoDB 数据库; caddy： 反向代理; 后文的指...","head":[["meta",{"property":"og:url","content":"https://hydro.js.org/docs/system/maintain.html"}],["meta",{"property":"og:site_name","content":"Hydro"}],["meta",{"property":"og:title","content":"维护"}],["meta",{"property":"og:description","content":"PM2 使用一键安装脚本安装的 Hydro 使用 PM2 对进程进行管理。 进程名称 可以通过下面的指令查看当前 PM2 正在管理的所有进程。 一键安装脚本默认会创建下面几个进程： hydrooj： Hydro 主进程; hydro-sandbox： Hydro 评测沙箱; mongodb： MongoDB 数据库; caddy： 反向代理; 后文的指..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2023-08-24T08:31:37.000Z"}],["meta",{"property":"article:modified_time","content":"2023-08-24T08:31:37.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"维护\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-08-24T08:31:37.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"PM2","slug":"pm2","link":"#pm2","children":[{"level":3,"title":"进程名称","slug":"进程名称","link":"#进程名称","children":[]},{"level":3,"title":"PM2 基本指令","slug":"pm2-基本指令","link":"#pm2-基本指令","children":[]}]},{"level":2,"title":"更新","slug":"更新","link":"#更新","children":[]},{"level":2,"title":"查看已安装版本","slug":"查看已安装版本","link":"#查看已安装版本","children":[]},{"level":2,"title":"清除缓存","slug":"清除缓存","link":"#清除缓存","children":[]}],"git":{"createdTime":1631785934000,"updatedTime":1692865897000,"contributors":[{"name":"undefined","email":"i@undefined.moe","commits":7},{"name":"Macesuted","email":"macesuted@qq.com","commits":2}]},"readingTime":{"minutes":1.71,"words":514},"filePathRelative":"docs/system/maintain.md","localizedDate":"September 16, 2021","autoDesc":true,"excerpt":""}')},7624:(s,a,n)=>{n.r(a),n.d(a,{default:()=>p});var e=n(6252);const l=[(0,e.uE)('<h1 id="维护" tabindex="-1"><a class="header-anchor" href="#维护"><span>维护</span></a></h1><h2 id="pm2" tabindex="-1"><a class="header-anchor" href="#pm2"><span>PM2</span></a></h2><p>使用一键安装脚本安装的 Hydro 使用 PM2 对进程进行管理。</p><h3 id="进程名称" tabindex="-1"><a class="header-anchor" href="#进程名称"><span>进程名称</span></a></h3><p>可以通过下面的指令查看当前 PM2 正在管理的所有进程。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki nord" style="background-color:#2e3440ff;" tabindex="0"><code><span class="line"><span style="color:#88C0D0;">pm2</span><span style="color:#D8DEE9FF;"> </span><span style="color:#A3BE8C;">ls</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>一键安装脚本默认会创建下面几个进程：</p><ul><li><code>hydrooj</code>： Hydro 主进程</li><li><code>hydro-sandbox</code>： Hydro 评测沙箱</li><li><code>mongodb</code>： MongoDB 数据库</li><li><code>caddy</code>： 反向代理</li></ul><p>后文的指令中将用 <code>&lt;name&gt;</code> 替代此处的进程名称，用 <code>&lt;id&gt;</code> 替代进程 ID（进程 ID 可通过 <code>pm2 ls</code> 查看）。（尖括号同样需要替换）</p><h3 id="pm2-基本指令" tabindex="-1"><a class="header-anchor" href="#pm2-基本指令"><span>PM2 基本指令</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki nord" style="background-color:#2e3440ff;" tabindex="0"><code><span class="line"><span style="color:#88C0D0;">pm2</span><span style="color:#D8DEE9FF;"> </span><span style="color:#A3BE8C;">ls</span><span style="color:#D8DEE9FF;"> </span><span style="color:#616E88;"># 查看进程列表</span></span>\n<span class="line"><span style="color:#88C0D0;">pm2</span><span style="color:#D8DEE9FF;"> </span><span style="color:#A3BE8C;">start</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">&lt;</span><span style="color:#A3BE8C;">i</span><span style="color:#D8DEE9FF;">d</span><span style="color:#81A1C1;">&gt;</span><span style="color:#D8DEE9FF;"> </span><span style="color:#616E88;"># 启动进程</span></span>\n<span class="line"><span style="color:#88C0D0;">pm2</span><span style="color:#D8DEE9FF;"> </span><span style="color:#A3BE8C;">stop</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">&lt;</span><span style="color:#A3BE8C;">i</span><span style="color:#D8DEE9FF;">d</span><span style="color:#81A1C1;">&gt;</span><span style="color:#D8DEE9FF;"> </span><span style="color:#616E88;"># 关闭进程</span></span>\n<span class="line"><span style="color:#88C0D0;">pm2</span><span style="color:#D8DEE9FF;"> </span><span style="color:#A3BE8C;">restart</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">&lt;</span><span style="color:#A3BE8C;">i</span><span style="color:#D8DEE9FF;">d</span><span style="color:#81A1C1;">&gt;</span><span style="color:#D8DEE9FF;"> </span><span style="color:#616E88;"># 重启进程</span></span>\n<span class="line"><span style="color:#88C0D0;">pm2</span><span style="color:#D8DEE9FF;"> </span><span style="color:#A3BE8C;">del</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">&lt;</span><span style="color:#A3BE8C;">i</span><span style="color:#D8DEE9FF;">d</span><span style="color:#81A1C1;">&gt;</span><span style="color:#D8DEE9FF;"> </span><span style="color:#616E88;"># 删除进程</span></span>\n<span class="line"><span style="color:#88C0D0;">pm2</span><span style="color:#D8DEE9FF;"> </span><span style="color:#A3BE8C;">log</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">&lt;</span><span style="color:#A3BE8C;">id/nam</span><span style="color:#D8DEE9FF;">e</span><span style="color:#81A1C1;">&gt;</span><span style="color:#D8DEE9FF;"> </span><span style="color:#A3BE8C;">--lines=100</span><span style="color:#D8DEE9FF;"> </span><span style="color:#616E88;"># 查看该进程的后 100 行日志</span></span>\n<span class="line"><span style="color:#88C0D0;">pm2</span><span style="color:#D8DEE9FF;"> </span><span style="color:#A3BE8C;">attach</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">&lt;</span><span style="color:#A3BE8C;">i</span><span style="color:#D8DEE9FF;">d</span><span style="color:#81A1C1;">&gt;</span><span style="color:#D8DEE9FF;"> </span><span style="color:#616E88;"># 与进程交互</span></span>\n<span class="line"><span style="color:#88C0D0;">pm2</span><span style="color:#D8DEE9FF;"> </span><span style="color:#A3BE8C;">save</span><span style="color:#D8DEE9FF;"> </span><span style="color:#616E88;"># 保存对 PM2 进行的修改（在添加、修改、删除进程后需要执行该指令）</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>在部分环境（常见于 lxc 容器或是精简版系统）下，服务器重启后 Hydro 可能不能正常自启动，这时请使用 <code>pm2 resurrect</code> 手动载入进程列表。</strong></p><p><strong>如果手动修改进程列表且已经覆盖掉保存的原列表，请使用 <code>pm2 stop all &amp;&amp; pm2 del all</code> 清空所有进程之后重新运行安装脚本。原有数据不会丢失。</strong></p><p>Hydro 主进程同样支持多进程启动，但在中低端服务器（不超过4核）中没有必要使用多进程启动 Hydro，会降低性能且成倍提高内存占用。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki nord" style="background-color:#2e3440ff;" tabindex="0"><code><span class="line"><span style="color:#88C0D0;">pm2</span><span style="color:#D8DEE9FF;"> </span><span style="color:#A3BE8C;">start</span><span style="color:#D8DEE9FF;"> </span><span style="color:#A3BE8C;">hydrooj</span><span style="color:#D8DEE9FF;"> </span><span style="color:#A3BE8C;">-i</span><span style="color:#D8DEE9FF;"> </span><span style="color:#81A1C1;">&lt;</span><span style="color:#D8DEE9FF;">n</span><span style="color:#81A1C1;">&gt;</span><span style="color:#D8DEE9FF;"> </span><span style="color:#616E88;"># 以 n 进程启动 Hydro 主进程</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="更新" tabindex="-1"><a class="header-anchor" href="#更新"><span>更新</span></a></h2><p>Hydro 系统会不定期发布更新，可以使用下面的命令获取更新。</p><p>无特殊情况请 <strong>不要更新PM2</strong> ！此操作可能导致进程列表丢失！</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki nord" style="background-color:#2e3440ff;" tabindex="0"><code><span class="line"><span style="color:#88C0D0;">yarn</span><span style="color:#D8DEE9FF;"> </span><span style="color:#A3BE8C;">global</span><span style="color:#D8DEE9FF;"> </span><span style="color:#A3BE8C;">upgrade-interactive</span><span style="color:#D8DEE9FF;"> </span><span style="color:#A3BE8C;">--latest</span><span style="color:#D8DEE9FF;"> </span><span style="color:#616E88;"># 在交互式界面中选择想要更新的组件</span></span>\n<span class="line"><span style="color:#88C0D0;">pm2</span><span style="color:#D8DEE9FF;"> </span><span style="color:#A3BE8C;">restart</span><span style="color:#D8DEE9FF;"> </span><span style="color:#A3BE8C;">hydrooj</span><span style="color:#D8DEE9FF;"> </span><span style="color:#616E88;"># 更新完后需重启 hydrooj</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="查看已安装版本" tabindex="-1"><a class="header-anchor" href="#查看已安装版本"><span>查看已安装版本</span></a></h2><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="shiki nord" style="background-color:#2e3440ff;" tabindex="0"><code><span class="line"><span style="color:#d8dee9ff;">cd `yarn global dir` &amp;&amp; yarn list --pattern hydrooj</span></span>\n<span class="line"><span style="color:#d8dee9ff;"></span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="清除缓存" tabindex="-1"><a class="header-anchor" href="#清除缓存"><span>清除缓存</span></a></h2><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="shiki nord" style="background-color:#2e3440ff;" tabindex="0"><code><span class="line"><span style="color:#d8dee9ff;">yarn cache clean &amp;&amp; nix-collect-garbage</span></span>\n<span class="line"><span style="color:#d8dee9ff;"></span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>',23)],o={},p=(0,n(3744).Z)(o,[["render",function(s,a){return(0,e.wg)(),(0,e.iD)("div",null,l)}]])},3744:(s,a)=>{a.Z=(s,a)=>{const n=s.__vccOpts||s;for(const[s,e]of a)n[s]=e;return n}}}]);